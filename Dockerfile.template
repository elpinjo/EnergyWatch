# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: http://docs.resin.io/deployment/docker-templates/
# and about resin base images here: http://docs.resin.io/runtime/resin-base-images/
# Note the node:slim image doesn't have node-gyp
FROM resin/%%RESIN_MACHINE_NAME%%-buildpack-deps:jessie-curl

RUN apt-get update && apt-get install -yq \
   python && \
   apt-get clean && rm -rf /var/lib/apt/lists/*
   
RUN cd /tmp && wget -O - 'https://downloads.sourceforge.net/project/webiopi/WebIOPi-0.7.1.tar.gz?r=&ts=1493199663&use_mirror=freefr' > /tmp/WebIOPi-0.7.1.tar.gz && tar -xzf WebIOPi-0.7.1.tar.gz  && rm WebIOPi-0.7.1.tar.gz && cd WebIOPi-0.7.1 && ./setup.sh && cd / && rm -rf /tmp/*

#RUN wget -O - https://downloads.sourceforge.net/project/webiopi/WebIOPi-0.7.1.tar.gz?r=&ts=1493199663&use_mirror=freefr > /tmp/WebIOPi-0.7.1.tar.gz && cd /tmp && tar -xzf WebIOPi-0.7.1.tar.gz  && rm WebIOPi-0.7.1.tar.gz && cd WebIOPi-0.7.1 && ./setup.sh && cd / && rm -rf /tmp/*
# Defines our working directory in container
WORKDIR /usr/src/app

# Enable systemd init system in container
ENV INITSYSTEM on

EXPOSE 80

# server.js will run when container starts up on the device
CMD ["webiopi", "80"]


